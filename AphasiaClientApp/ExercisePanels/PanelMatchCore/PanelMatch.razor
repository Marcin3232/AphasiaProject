@using AphasiaClientApp.Models.Constant
@using AphasiaClientApp.Models.Enums
@using AphasiaClientApp.Utils.Js.Sounds
@inject ISoundService Sound

@if (show)
{
    <div class="container">

        @if (panelMatchList.Any() || panelMatchList != null)
        {
            <div class="row justify-content-center margin-panel">
                @switch (PanelModeService.Get(exercisePhase))
                {
                    case PanelMode.Text:
                        <div class="col-4 @PanelExtension.SetColPosition(exercisePhase) c-center text-center">
                            @foreach (var item in panelMatchList)
                            {
                                <div style="display:flex;">
                                    <ImageButtonModel TypeImage=@NaviTypeImage.Sound
                                  ButtonCallback="()=>OnPlaySound(item)" />
                                    <TextFrame Text=@item.Word
                           IsResponsive=true
                           Color=@ColorTypeIsCorrect.SetWhiteWithDotted(item.IsCorrect)
                           IsClickable=!isFinish
                           ClickCallback="()=> OnClickMatch(item)" />
                                </div>
                                <p></p>
                            }
                        </div>
                        break;
                    case PanelMode.TextUnder:
                        <div class="col-12 order-2 text-center" style="display:flex;margin-top: 0.625rem;">
                            @foreach (var item in panelMatchList)
                            {
                                <ImageButtonModel TypeImage=@NaviTypeImage.Sound
                              ButtonCallback="()=>OnPlaySound(item)" SetStyle=" margin-left:0.75rem;" />
                                <TextFrame Text=@item.Word SetStyle=" margin-right:0.75rem;"
                       IsResponsive=true
                       Color=@ColorTypeIsCorrect.SetWhiteWithDotted(item.IsCorrect)
                       IsClickable=!isFinish
                       ClickCallback="()=> OnClickMatch(item)" />
                            }
                        </div>
                        break;
                    case PanelMode.Image:
                        <div class="col-6 row-direction text-center">

                            @foreach (var item in panelMatchList)
                            {
                                <div class="column-direction">
                                    <div class="card-frame @item.ColorIndicate" style="@executePointerEvent"
                     @onclick="()=> OnClickMatch(item)">
                                        <img class="exerciseTwoImg" src="@item.PictureSecond" />
                                    </div>
                                </div>
                                <audio id=@item.Word src=@item.WordSound />
                                <audio id=@item.Desctiption src=@item.DescriptionSound />
                            }
                        </div>
                        break;
                }

                <div class="col @PanelExtension.SetColPosition(exercisePhase,true) text-center">
                    @foreach (var item in panelMatchList)
                    {
                        if (item.IsMatch)
                        {
                            <img src=@item.Picture class="img-fluid" alt="...">
                            <div class="text-center bottom-image-desc" style="display: flex;">

                                @switch (PanelModeService.GetTask(exercisePhase))
                                {
                                    case PanelTaskMode.HelperTask:
                                        <ImageButtonModel TypeImage="@NaviTypeImage.Sound"
                                  ButtonCallback="()=>OnPlaySound(item)" />
                                        @if (item.IsCorrect is true)
                                        {
                                            <TextFrame Text=@item.Word IsResponsive=false />
                                        }
                                        break;
                                    case PanelTaskMode.WorkTask:
                                        <ImageButtonModel TypeImage="@NaviTypeImage.Sound"
                                  ButtonCallback="()=>OnPlaySound(item,true)" />
                                        <TextFrame Text=@item.Desctiption IsResponsive=true />
                                        break;
                                    default:
                                        break;
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        }
    </div>
}
